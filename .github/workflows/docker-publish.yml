name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
      - 'release-*'
  workflow_dispatch:
    inputs:
      tag:
        description: Optional custom image tag (e.g., v1.2.3) — overrides auto-tagging
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔍 Debug repository info
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "Actor: ${{ github.actor }}"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image name
        id: imagename
        run: |
          echo "IMAGE=ghcr.io/${{ github.repository_owner }}/smvshows" >> $GITHUB_OUTPUT
          echo "LATEST=${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}" >> $GITHUB_OUTPUT

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.imagename.outputs.IMAGE }}
          tags: |
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.imagename.outputs.IMAGE }}:sha-${{ github.sha }}
            ${{ steps.imagename.outputs.IMAGE }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max